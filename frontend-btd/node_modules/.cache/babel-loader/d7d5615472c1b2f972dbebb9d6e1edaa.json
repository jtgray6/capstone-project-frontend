{"remainingRequest":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/babel-loader/lib/index.js!/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/eslint-loader/index.js??ref--13-0!/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/src/services/user.service.js","dependencies":[{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/src/services/user.service.js","mtime":1586542646684},{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBjb25maWcgZnJvbSAnY29uZmlnJzsKaW1wb3J0IHsgYXV0aEhlYWRlciB9IGZyb20gJy4uL2hlbHBlcnMvYXV0aC1oZWFkZXInOwpleHBvcnQgdmFyIHVzZXJTZXJ2aWNlID0gewogIGxvZ2luOiBsb2dpbiwKICBsb2dvdXQ6IGxvZ291dCwKICBnZXRBbGw6IGdldEFsbAp9OwoKZnVuY3Rpb24gbG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKSB7CiAgdmFyIHJlcXVlc3RPcHRpb25zID0gewogICAgbWV0aG9kOiAnUE9TVCcsCiAgICBoZWFkZXJzOiB7CiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgIH0sCiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwKICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkCiAgICB9KQogIH07CiAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChjb25maWcuYXBpVXJsLCAiL3VzZXJzL2F1dGhlbnRpY2F0ZSIpLCByZXF1ZXN0T3B0aW9ucykudGhlbihoYW5kbGVSZXNwb25zZSkudGhlbihmdW5jdGlvbiAodXNlcikgewogICAgLy8gbG9naW4gc3VjY2Vzc2Z1bCBpZiB0aGVyZSdzIGEgand0IHRva2VuIGluIHRoZSByZXNwb25zZQogICAgaWYgKHVzZXIudG9rZW4pIHsKICAgICAgLy8gc3RvcmUgdXNlciBkZXRhaWxzIGFuZCBqd3QgdG9rZW4gaW4gbG9jYWwgc3RvcmFnZSB0byBrZWVwIHVzZXIgbG9nZ2VkIGluIGJldHdlZW4gcGFnZSByZWZyZXNoZXMKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3VzZXInLCBKU09OLnN0cmluZ2lmeSh1c2VyKSk7CiAgICB9CgogICAgcmV0dXJuIHVzZXI7CiAgfSk7Cn0KCmZ1bmN0aW9uIGxvZ291dCgpIHsKICAvLyByZW1vdmUgdXNlciBmcm9tIGxvY2FsIHN0b3JhZ2UgdG8gbG9nIHVzZXIgb3V0CiAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3VzZXInKTsKfQoKZnVuY3Rpb24gZ2V0QWxsKCkgewogIHZhciByZXF1ZXN0T3B0aW9ucyA9IHsKICAgIG1ldGhvZDogJ0dFVCcsCiAgICBoZWFkZXJzOiBhdXRoSGVhZGVyKCkKICB9OwogIHJldHVybiBmZXRjaCgiIi5jb25jYXQoY29uZmlnLmFwaVVybCwgIi91c2VycyIpLCByZXF1ZXN0T3B0aW9ucykudGhlbihoYW5kbGVSZXNwb25zZSk7Cn0KCmZ1bmN0aW9uIGhhbmRsZVJlc3BvbnNlKHJlc3BvbnNlKSB7CiAgcmV0dXJuIHJlc3BvbnNlLnRleHQoKS50aGVuKGZ1bmN0aW9uICh0ZXh0KSB7CiAgICB2YXIgZGF0YSA9IHRleHQgJiYgSlNPTi5wYXJzZSh0ZXh0KTsKCiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkgewogICAgICAgIC8vIGF1dG8gbG9nb3V0IGlmIDQwMSByZXNwb25zZSByZXR1cm5lZCBmcm9tIGFwaQogICAgICAgIGxvZ291dCgpOwogICAgICAgIGxvY2F0aW9uLnJlbG9hZCh0cnVlKTsKICAgICAgfQoKICAgICAgdmFyIGVycm9yID0gZGF0YSAmJiBkYXRhLm1lc3NhZ2UgfHwgcmVzcG9uc2Uuc3RhdHVzVGV4dDsKICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgIH0KCiAgICByZXR1cm4gZGF0YTsKICB9KTsKfQ=="},{"version":3,"sources":["/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/src/services/user.service.js"],"names":["config","authHeader","userService","login","logout","getAll","username","password","requestOptions","method","headers","body","JSON","stringify","fetch","apiUrl","then","handleResponse","user","token","localStorage","setItem","removeItem","response","text","data","parse","ok","status","location","reload","error","message","statusText","Promise","reject"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AAEA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,KAAK,EAALA,KADuB;AAEvBC,EAAAA,MAAM,EAANA,MAFuB;AAGvBC,EAAAA,MAAM,EAANA;AAHuB,CAApB;;AAMP,SAASF,KAAT,CAAeG,QAAf,EAAyBC,QAAzB,EAAmC;AAC/B,MAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,QAAQ,EAARA;AAAZ,KAAf;AAHa,GAAvB;AAMA,SAAOO,KAAK,WAAId,MAAM,CAACe,MAAX,0BAAwCP,cAAxC,CAAL,CACFQ,IADE,CACGC,cADH,EAEFD,IAFE,CAEG,UAAAE,IAAI,EAAI;AACV;AACA,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACZ;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BT,IAAI,CAACC,SAAL,CAAeK,IAAf,CAA7B;AACH;;AAED,WAAOA,IAAP;AACH,GAVE,CAAP;AAWH;;AAED,SAASd,MAAT,GAAkB;AACd;AACAgB,EAAAA,YAAY,CAACE,UAAb,CAAwB,MAAxB;AACH;;AAED,SAASjB,MAAT,GAAkB;AACd,MAAMG,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,KADW;AAEnBC,IAAAA,OAAO,EAAET,UAAU;AAFA,GAAvB;AAKA,SAAOa,KAAK,WAAId,MAAM,CAACe,MAAX,aAA2BP,cAA3B,CAAL,CAAgDQ,IAAhD,CAAqDC,cAArD,CAAP;AACH;;AAED,SAASA,cAAT,CAAwBM,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACC,IAAT,GAAgBR,IAAhB,CAAqB,UAAAQ,IAAI,EAAI;AAChC,QAAMC,IAAI,GAAGD,IAAI,IAAIZ,IAAI,CAACc,KAAL,CAAWF,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACI,EAAd,EAAkB;AACd,UAAIJ,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;AACzB;AACAxB,QAAAA,MAAM;AACNyB,QAAAA,QAAQ,CAACC,MAAT,CAAgB,IAAhB;AACH;;AAED,UAAMC,KAAK,GAAIN,IAAI,IAAIA,IAAI,CAACO,OAAd,IAA0BT,QAAQ,CAACU,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AAED,WAAON,IAAP;AACH,GAdM,CAAP;AAeH","sourcesContent":["import config from 'config';\nimport { authHeader } from '../helpers/auth-header';\n\nexport const userService = {\n    login,\n    logout,\n    getAll\n};\n\nfunction login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n    };\n\n    return fetch(`${config.apiUrl}/users/authenticate`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            // login successful if there's a jwt token in the response\n            if (user.token) {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(user));\n            }\n\n            return user;\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n}\n\nfunction getAll() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`${config.apiUrl}/users`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n                location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}"]}]}