{"remainingRequest":"/Users/jeremygray/Flatiron School/Mod5/project-frontend/frontend-btd/node_modules/babel-loader/lib/index.js!/Users/jeremygray/Flatiron School/Mod5/project-frontend/frontend-btd/node_modules/eslint-loader/index.js??ref--13-0!/Users/jeremygray/Flatiron School/Mod5/project-frontend/frontend-btd/src/store/index.js","dependencies":[{"path":"/Users/jeremygray/Flatiron School/Mod5/project-frontend/frontend-btd/src/store/index.js","mtime":1586967537986},{"path":"/Users/jeremygray/Flatiron School/Mod5/project-frontend/frontend-btd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeremygray/Flatiron School/Mod5/project-frontend/frontend-btd/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jeremygray/Flatiron School/Mod5/project-frontend/frontend-btd/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFZ1ZXggZnJvbSAndnVleCc7CmltcG9ydCB7IGFsZXJ0IH0gZnJvbSAnLi9hbGVydC5tb2R1bGUnOwppbXBvcnQgeyBhdXRoZW50aWNhdGlvbiB9IGZyb20gJy4vYXV0aGVudGljYXRpb24ubW9kdWxlJzsKaW1wb3J0IHsgdXNlcnMgfSBmcm9tICcuL3VzZXJzLm1vZHVsZSc7CnZhciBhcGlVUkwgPSAnaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaSc7CnZhciB0b2tlbnMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyJykpOwpWdWUudXNlKFZ1ZXgpOwpleHBvcnQgZGVmYXVsdCBuZXcgVnVleC5TdG9yZSh7CiAgc3RhdGU6IHsKICAgIGJyZXdlcmllczogW10sCiAgICBiZWVyczogW10KICB9LAogIG11dGF0aW9uczogewogICAgc2V0QnJld2VyaWVzOiBmdW5jdGlvbiBzZXRCcmV3ZXJpZXMoc3RhdGUsIGJyZXdlcmllcykgewogICAgICBzdGF0ZS5icmV3ZXJpZXMgPSBicmV3ZXJpZXM7CiAgICAgIHJldHVybiBzdGF0ZTsKICAgIH0sCiAgICBzZXRCZWVyczogZnVuY3Rpb24gc2V0QmVlcnMoc3RhdGUsIGJlZXJzKSB7CiAgICAgIHN0YXRlLmJlZXJzID0gYmVlcnM7CiAgICAgIHJldHVybiBzdGF0ZTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGZldGNoQnJld2VyaWVzOiBmdW5jdGlvbiBmZXRjaEJyZXdlcmllcyhfcmVmKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgZmV0Y2goIiIuY29uY2F0KGFwaVVSTCwgIi9icmV3ZXJpZXMiKSwgewogICAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICdBdXRob3JpemF0aW9uJzogIkpXVCAiLmNvbmNhdCh0b2tlbnMuYWNjZXNzKQogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChicmV3ZXJpZXMpIHsKICAgICAgICBjb21taXQoInNldEJyZXdlcmllcyIsIGJyZXdlcmllcyk7CiAgICAgIH0pOwogICAgfSwKICAgIGZldGNoQmVlcnM6IGZ1bmN0aW9uIGZldGNoQmVlcnMoX3JlZjIpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgZmV0Y2goIiIuY29uY2F0KGFwaVVSTCwgIi9iZWVycyIpLCB7CiAgICAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAiSldUICIuY29uY2F0KHRva2Vucy5hY2Nlc3MpCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGJlZXJzKSB7CiAgICAgICAgY29tbWl0KCJzZXRCZWVycyIsIGJlZXJzKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb2R1bGVzOiB7CiAgICBhbGVydDogYWxlcnQsCiAgICBhdXRoZW50aWNhdGlvbjogYXV0aGVudGljYXRpb24sCiAgICB1c2VyczogdXNlcnMKICB9Cn0pOw=="},{"version":3,"sources":["/Users/jeremygray/Flatiron School/Mod5/project-frontend/frontend-btd/src/store/index.js"],"names":["Vue","Vuex","alert","authentication","users","apiURL","tokens","JSON","parse","localStorage","getItem","use","Store","state","breweries","beers","mutations","setBreweries","setBeers","actions","fetchBreweries","commit","fetch","method","headers","access","then","response","json","fetchBeers","modules"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,IAAMC,MAAM,GAAG,2BAAf;AACA,IAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAf;AAGAV,GAAG,CAACW,GAAJ,CAAQV,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACW,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,EADN;AAELC,IAAAA,KAAK,EAAE;AAFF,GADqB;AAK5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,YADS,wBACIJ,KADJ,EACWC,SADX,EACqB;AAC5BD,MAAAA,KAAK,CAACC,SAAN,GAAkBA,SAAlB;AACA,aAAOD,KAAP;AACD,KAJQ;AAKTK,IAAAA,QALS,oBAKAL,KALA,EAKOE,KALP,EAKa;AACpBF,MAAAA,KAAK,CAACE,KAAN,GAAcA,KAAd;AACA,aAAOF,KAAP;AACD;AARQ,GALiB;AAe5BM,EAAAA,OAAO,EAAE;AACPC,IAAAA,cADO,gCACiB;AAAA,UAARC,MAAQ,QAARA,MAAQ;AACtBC,MAAAA,KAAK,WAAIjB,MAAJ,iBAAwB;AAC3BkB,QAAAA,MAAM,EAAE,KADmB;AAE3BC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,yCAAwBlB,MAAM,CAACmB,MAA/B;AAFO;AAFkB,OAAxB,CAAL,CAOGC,IAPH,CAOQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAPhB,EAQGF,IARH,CAQQ,UAAAZ,SAAS,EAAI;AACjBO,QAAAA,MAAM,CAAC,cAAD,EAAiBP,SAAjB,CAAN;AACD,OAVH;AAYD,KAdM;AAePe,IAAAA,UAfO,6BAea;AAAA,UAARR,MAAQ,SAARA,MAAQ;AAClBC,MAAAA,KAAK,WAAIjB,MAAJ,aAAoB;AACvBkB,QAAAA,MAAM,EAAE,KADe;AAEvBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,yCAAwBlB,MAAM,CAACmB,MAA/B;AAFO;AAFc,OAApB,CAAL,CAOGC,IAPH,CAOQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAPhB,EAQGF,IARH,CAQQ,UAAAX,KAAK,EAAI;AACbM,QAAAA,MAAM,CAAC,UAAD,EAAaN,KAAb,CAAN;AACD,OAVH;AAWD;AA3BM,GAfmB;AA4C5Be,EAAAA,OAAO,EAAE;AACP5B,IAAAA,KAAK,EAALA,KADO;AAEPC,IAAAA,cAAc,EAAdA,cAFO;AAGPC,IAAAA,KAAK,EAALA;AAHO;AA5CmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nimport { alert } from './alert.module';\nimport { authentication } from './authentication.module';\nimport { users } from './users.module';\n\nconst apiURL = 'http://localhost:8000/api'\nconst tokens = JSON.parse(localStorage.getItem('user'));\n\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    breweries: [],\n    beers: []\n  },\n  mutations: {\n    setBreweries(state, breweries){\n      state.breweries = breweries\n      return state\n    },\n    setBeers(state, beers){\n      state.beers = beers\n      return state\n    }\n  },\n  actions: {\n    fetchBreweries({commit}){\n      fetch(`${apiURL}/breweries`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `JWT ${tokens.access}`\n        }\n      })\n        .then(response => response.json())\n        .then(breweries => {\n          commit(\"setBreweries\", breweries)\n        })\n        \n    },\n    fetchBeers({commit}){\n      fetch(`${apiURL}/beers`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `JWT ${tokens.access}`\n        }\n      })\n        .then(response => response.json())\n        .then(beers => {\n          commit(\"setBeers\", beers)\n        })\n    }\n  },\n  modules: {\n    alert,\n    authentication,\n    users\n  }\n})\n"]}]}