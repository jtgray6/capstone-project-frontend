{"remainingRequest":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/babel-loader/lib/index.js!/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/eslint-loader/index.js??ref--13-0!/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/src/services/user.service.js","dependencies":[{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/src/services/user.service.js","mtime":1586542830639},{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBjb25maWcgZnJvbSAnLi4vLi4vbm9kZV9tb2R1bGVzL2NvbmZpZyc7CmltcG9ydCB7IGF1dGhIZWFkZXIgfSBmcm9tICcuLi9oZWxwZXJzL2F1dGgtaGVhZGVyJzsKZXhwb3J0IHZhciB1c2VyU2VydmljZSA9IHsKICBsb2dpbjogbG9naW4sCiAgbG9nb3V0OiBsb2dvdXQsCiAgZ2V0QWxsOiBnZXRBbGwKfTsKCmZ1bmN0aW9uIGxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZCkgewogIHZhciByZXF1ZXN0T3B0aW9ucyA9IHsKICAgIG1ldGhvZDogJ1BPU1QnLAogICAgaGVhZGVyczogewogICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICB9LAogICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICB1c2VybmFtZTogdXNlcm5hbWUsCiAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgfSkKICB9OwogIHJldHVybiBmZXRjaCgiIi5jb25jYXQoY29uZmlnLmFwaVVybCwgIi91c2Vycy9hdXRoZW50aWNhdGUiKSwgcmVxdWVzdE9wdGlvbnMpLnRoZW4oaGFuZGxlUmVzcG9uc2UpLnRoZW4oZnVuY3Rpb24gKHVzZXIpIHsKICAgIC8vIGxvZ2luIHN1Y2Nlc3NmdWwgaWYgdGhlcmUncyBhIGp3dCB0b2tlbiBpbiB0aGUgcmVzcG9uc2UKICAgIGlmICh1c2VyLnRva2VuKSB7CiAgICAgIC8vIHN0b3JlIHVzZXIgZGV0YWlscyBhbmQgand0IHRva2VuIGluIGxvY2FsIHN0b3JhZ2UgdG8ga2VlcCB1c2VyIGxvZ2dlZCBpbiBiZXR3ZWVuIHBhZ2UgcmVmcmVzaGVzCiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VyJywgSlNPTi5zdHJpbmdpZnkodXNlcikpOwogICAgfQoKICAgIHJldHVybiB1c2VyOwogIH0pOwp9CgpmdW5jdGlvbiBsb2dvdXQoKSB7CiAgLy8gcmVtb3ZlIHVzZXIgZnJvbSBsb2NhbCBzdG9yYWdlIHRvIGxvZyB1c2VyIG91dAogIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd1c2VyJyk7Cn0KCmZ1bmN0aW9uIGdldEFsbCgpIHsKICB2YXIgcmVxdWVzdE9wdGlvbnMgPSB7CiAgICBtZXRob2Q6ICdHRVQnLAogICAgaGVhZGVyczogYXV0aEhlYWRlcigpCiAgfTsKICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGNvbmZpZy5hcGlVcmwsICIvdXNlcnMiKSwgcmVxdWVzdE9wdGlvbnMpLnRoZW4oaGFuZGxlUmVzcG9uc2UpOwp9CgpmdW5jdGlvbiBoYW5kbGVSZXNwb25zZShyZXNwb25zZSkgewogIHJldHVybiByZXNwb25zZS50ZXh0KCkudGhlbihmdW5jdGlvbiAodGV4dCkgewogICAgdmFyIGRhdGEgPSB0ZXh0ICYmIEpTT04ucGFyc2UodGV4dCk7CgogICAgaWYgKCFyZXNwb25zZS5vaykgewogICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHsKICAgICAgICAvLyBhdXRvIGxvZ291dCBpZiA0MDEgcmVzcG9uc2UgcmV0dXJuZWQgZnJvbSBhcGkKICAgICAgICBsb2dvdXQoKTsKICAgICAgICBsb2NhdGlvbi5yZWxvYWQodHJ1ZSk7CiAgICAgIH0KCiAgICAgIHZhciBlcnJvciA9IGRhdGEgJiYgZGF0YS5tZXNzYWdlIHx8IHJlc3BvbnNlLnN0YXR1c1RleHQ7CiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7CiAgICB9CgogICAgcmV0dXJuIGRhdGE7CiAgfSk7Cn0="},{"version":3,"sources":["/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/src/services/user.service.js"],"names":["config","authHeader","userService","login","logout","getAll","username","password","requestOptions","method","headers","body","JSON","stringify","fetch","apiUrl","then","handleResponse","user","token","localStorage","setItem","removeItem","response","text","data","parse","ok","status","location","reload","error","message","statusText","Promise","reject"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AAEA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,KAAK,EAALA,KADuB;AAEvBC,EAAAA,MAAM,EAANA,MAFuB;AAGvBC,EAAAA,MAAM,EAANA;AAHuB,CAApB;;AAMP,SAASF,KAAT,CAAeG,QAAf,EAAyBC,QAAzB,EAAmC;AAC/B,MAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,QAAQ,EAARA;AAAZ,KAAf;AAHa,GAAvB;AAMA,SAAOO,KAAK,WAAId,MAAM,CAACe,MAAX,0BAAwCP,cAAxC,CAAL,CACFQ,IADE,CACGC,cADH,EAEFD,IAFE,CAEG,UAAAE,IAAI,EAAI;AACV;AACA,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACZ;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BT,IAAI,CAACC,SAAL,CAAeK,IAAf,CAA7B;AACH;;AAED,WAAOA,IAAP;AACH,GAVE,CAAP;AAWH;;AAED,SAASd,MAAT,GAAkB;AACd;AACAgB,EAAAA,YAAY,CAACE,UAAb,CAAwB,MAAxB;AACH;;AAED,SAASjB,MAAT,GAAkB;AACd,MAAMG,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,KADW;AAEnBC,IAAAA,OAAO,EAAET,UAAU;AAFA,GAAvB;AAKA,SAAOa,KAAK,WAAId,MAAM,CAACe,MAAX,aAA2BP,cAA3B,CAAL,CAAgDQ,IAAhD,CAAqDC,cAArD,CAAP;AACH;;AAED,SAASA,cAAT,CAAwBM,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACC,IAAT,GAAgBR,IAAhB,CAAqB,UAAAQ,IAAI,EAAI;AAChC,QAAMC,IAAI,GAAGD,IAAI,IAAIZ,IAAI,CAACc,KAAL,CAAWF,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACI,EAAd,EAAkB;AACd,UAAIJ,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;AACzB;AACAxB,QAAAA,MAAM;AACNyB,QAAAA,QAAQ,CAACC,MAAT,CAAgB,IAAhB;AACH;;AAED,UAAMC,KAAK,GAAIN,IAAI,IAAIA,IAAI,CAACO,OAAd,IAA0BT,QAAQ,CAACU,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AAED,WAAON,IAAP;AACH,GAdM,CAAP;AAeH","sourcesContent":["import config from '../../node_modules/config';\nimport { authHeader } from '../helpers/auth-header';\n\nexport const userService = {\n    login,\n    logout,\n    getAll\n};\n\nfunction login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n    };\n\n    return fetch(`${config.apiUrl}/users/authenticate`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            // login successful if there's a jwt token in the response\n            if (user.token) {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(user));\n            }\n\n            return user;\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n}\n\nfunction getAll() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`${config.apiUrl}/users`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n                location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}"]}]}