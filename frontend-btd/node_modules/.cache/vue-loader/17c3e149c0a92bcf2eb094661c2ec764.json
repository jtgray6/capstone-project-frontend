{"remainingRequest":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/src/views/Locations.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/src/views/Locations.vue","mtime":1586384468877},{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeremygray/Flatiron School/Mod5/project/frontend-btd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5NYXAgewogICAgaGVpZ2h0OiAxMDB2aDsKICAgIHdpZHRoOiAxMDB2dzsKfQo="},{"version":3,"sources":["Locations.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA","file":"Locations.vue","sourceRoot":"src/views","sourcesContent":["<template>\n        <div class=\"App\"/>\n</template>\n\n<script>\nimport gmapsInit from '../utils/gmaps';\n\nexport default {\n  name: 'App',\n  async mounted() {\n    try {\n      const google = await gmapsInit();\n      const geocoder = new google.maps.Geocoder();\n      const map = new google.maps.Map(this.$el);\n\n      geocoder.geocode({ address: 'Austria' }, (results, status) => {\n        if (status !== 'OK' || !results[0]) {\n          throw new Error(status);\n        }\n\n        map.setCenter(results[0].geometry.location);\n        map.fitBounds(results[0].geometry.viewport);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\">\n    .Map {\n        height: 100vh;\n        width: 100vw;\n    }\n</style>"]}]}